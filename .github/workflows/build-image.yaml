name: Build & publish kubectl‑curl image

on:
  workflow_dispatch:
  schedule:
    - cron: '0 6 * * *'          # rebuild every day at 06:00 UTC

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # 1. Discover the latest stable kubectl release tag (e.g. v1.30.1)
      - name: Get latest kubectl version
        id: kv
        run: |
          ver=$(curl -L -s https://dl.k8s.io/release/stable.txt)   # official endpoint :contentReference[oaicite:0]{index=0}
          echo "kubectl_version=${ver}" >> "$GITHUB_OUTPUT"

      # 2. Log in to GHCR with the built‑in token
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 3. Build and push, tagging the image with that exact version (and :latest)
      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/kubectl-curl:${{ steps.kv.outputs.kubectl_version }}
            ghcr.io/${{ github.repository_owner }}/kubectl-curl:latest
          build-args: |
            KUBECTL_VERSION=${{ steps.kv.outputs.kubectl_version }}

      # 4. (Optional) sanity‑check that kubectl inside the image matches the tag
      - name: Verify kubectl version inside the image
        run: |
          docker run --rm ghcr.io/${{ github.repository_owner }}/kubectl-curl:${{ steps.kv.outputs.kubectl_version }} \
            kubectl version --client --short
